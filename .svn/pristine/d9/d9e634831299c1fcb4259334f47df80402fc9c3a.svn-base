
package com.acneuro.test.automation.fileslibrary;

import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.commons.io.FileUtils;

import com.acneuro.test.automation.mvno_project_library.MVNOProjectSpecific;

/**
 * @author sijimon james
 */
public class FileUtilsLibrary {

	public static File csvFileForCuesRejection(String customerNumber, String diseAccountnumber, String country,
			String paymentMode, String rejectionReason) {
		String commaDelimiter = ",";
		File myFile = null;
		// String newLineSeparator = "\n";
		// String fileHeader = ""; //No file header needed, if need use this
		try {

			String date = MVNOProjectSpecific.dateToString(new Date(), "yyyyMMddhhmmss");

			List<FileEntities> listProducts = new ArrayList<FileEntities>();
			listProducts.add(new FileEntities(customerNumber, diseAccountnumber, "120.99", rejectionReason));

			// Create a new directory if not exists

			String directory = String.format("\\files\\CC_Retry_Files\\%s\\", country);
			String filename = String.format("\\CuES_Rejected_Payment_%s_%s.csv", country, date);
			myFile = new File(System.getProperty("user.dir") + directory + filename);
			if (!myFile.exists()) {
				boolean result = false;

				try {
					myFile.mkdir();
					result = true;
				} catch (SecurityException se) {
					// handle it
					se.printStackTrace();
				}
				if (result) {
					System.out.println(String.format("New Directory created for %s", country));
				}
			} else {
				// Remove the existing files
				FileUtils.cleanDirectory(new File(System.getProperty("user.dir") + directory));
			}
			File parentDir = myFile.getParentFile();
			if (!parentDir.exists())
				parentDir.mkdirs(); // create parent dir and ancestors if
									// necessary
			// FileWriter does not allow to specify charset, better use this:
			// Writer w = new OutputStreamWriter(new FileOutputStream(myFile));

			FileWriter filewriter = new FileWriter(myFile);
			for (FileEntities add : listProducts) {
				filewriter.append(add.getDiseAccountnumber());
				filewriter.append(commaDelimiter);
				filewriter.append(add.getCustomerNumber());
				filewriter.append(commaDelimiter);
				filewriter.append(add.getDueAmount());
				filewriter.append(commaDelimiter);
				filewriter.append(country);
				filewriter.append(commaDelimiter);
				filewriter.append(paymentMode);
				filewriter.append(commaDelimiter);
				filewriter.append(add.getRejectionreason());
				filewriter.flush();
				filewriter.close();
			}

		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return myFile;

	}

}
