package com.acneuro.test.automation.uk_workflow_tests;

import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.Test;

import com.acneuro.test.automation.libraries.ConfigLib;
import com.acneuro.test.automation.libraries.Constant;
import com.acneuro.test.automation.libraries.Generic;
import com.acneuro.test.automation.libraries.VideoRecording;

import mvno_project_library.MVNOProjectSpecific;
import mvno_project_library.UKProjectSpecific;

public class TC_1_UKCustomerActivation extends ConfigLib {

	String orderId = "";
	String orderNumber = "";
	String taskId = ""; // Need task id to 'resolving_tasks'
	String latestPriId = "";

	@Test
	public void CustomerActivation() {

		// Select UK URL
		String ukURL = Generic.urlSelection("UK");
		driver.get(ukURL);

		orderNumber = accountCreationForUKCustomer();

		// if order status is 'NEW' in database change to 'RESOLVING_TASKS'

		/*
		 * Fail the test if Order is in any other status other than resolving
		 * tasks
		 */

		// verify for resolving tasks
		Assert.assertTrue(MVNOProjectSpecific.CheckStatusOfOrder(orderNumber));

		// RESOLVING_TASKS API signal
		orderId = MVNOProjectSpecific.processResolvingTasksSignal(orderNumber);

		// here we check if upfront payment action created
		boolean checkActionUpfrontPayment = MVNOProjectSpecific.checkIfActionExistsForOrder(orderId,
				"ofUpfrontPaymentWait");
		Assert.assertTrue(checkActionUpfrontPayment);

		// here we check if upfront payment is finished successfully
		boolean upfrontPaymentActionIsDone = UKProjectSpecific.processUpfrontPayment(orderId);
		Assert.assertTrue(upfrontPaymentActionIsDone);

		// here we check if shipping signal action is created
		boolean checkActionmbShipWaiting = MVNOProjectSpecific.checkIfActionExistsForOrder(orderId, "mbShipWaiting");
		Assert.assertTrue(checkActionmbShipWaiting);

		// here we check if upfront payment is finished successfully
		boolean mbShipWaitingIsDone = UKProjectSpecific.processShipWait(orderId, "mbShipWaiting");
		Assert.assertTrue(mbShipWaitingIsDone);

		// here we check if SIM activation action is created
		boolean checkActionmbSimActivation = MVNOProjectSpecific.checkIfActionExistsForOrder(orderId,
				"mbSimActivation");
		Assert.assertTrue(checkActionmbSimActivation);

		// If SIM activation action present activate the SIM in MYJOi
		UKProjectSpecific.LoginToUKMyJoiWithLatestEmailID();
		UKProjectSpecific.ActivateSimAfterLogin();
		Reporter.log("SIM activation is done using MyJOi", true);

		boolean checkActionmbProvisionWait = MVNOProjectSpecific.checkIfActionExistsForOrder(orderId,
				"mbProvisionWait");
		Assert.assertTrue(checkActionmbProvisionWait);

		UKProjectSpecific.provisioningDuringActivationOfOrders(orderId);

	}

	public String accountCreationForUKCustomer() {

		VideoRecording.startRecording();

		// Hide the cookies message
		MVNOProjectSpecific.hideCookieMessage();
		// Step 1: verify the home page title
		MVNOProjectSpecific.verifyTitleOfPage("JOi Telecom");
		// Step 2: Click on order button
		UKProjectSpecific.order_creation_page();
		// step 3:check the radio button 'Joi Liberty' ----PRICE PLAN SELECTION
		UKProjectSpecific.Joi_Liberty_price_plan();
		// step 4: Click on 'Add To Basket' on same page, this can be used for
		// any price plan
		UKProjectSpecific.Our_Offer_add_to_basket();
		// step 5: Click on 'Add To Basket' without Number porting
		UKProjectSpecific.addToBasketWithoutPorting();
		// Step 6: click on "check out"
		UKProjectSpecific.Check_Out_Order();
		UKProjectSpecific.createUkCustomerAccount();
		UKProjectSpecific.customerDetails("Mr.", "ACN", "MVNO", "Automation", "31121966", "03900000000");
		UKProjectSpecific.contactAndBillingAdress("SW7 5DP", "38", "38 Hyde Park Gate London SW7 5DP GB");
		MVNOProjectSpecific.verifyTitleOfPage("JOi Account Created");

		UKProjectSpecific.continueFromAccountCreationPage();
		// Subscription details - Subscription is for same customer
		UKProjectSpecific.continue_step_3();
		// UK-Bank Account details
		UKProjectSpecific.Bank_details(Constant.Bank_Name_UK, Constant.UK_Account_Number, Constant.UK_Sort_code);
		UKProjectSpecific.orderSummaryPageForNewCustomer("999999");
		UKProjectSpecific.Payment_Datacash(Constant.Card_Type1, Constant.Type1_CC_number, "2018",
				Constant.Type1_CC_CVV);
		MVNOProjectSpecific.verifyTitleOfPage("Your JOi Order Confirmation");
		MVNOProjectSpecific.takeScreenShot("C:/testing/workspace/Screenshots/mvno/Order_Creation.png");
		String getOrderNumber = MVNOProjectSpecific.getAndVerifyText("//div/article/section/p[2]/strong");
		String orderNumber = getOrderNumber.substring(1);
		//video recording
		VideoRecording.stopRecording();
		Reporter.log("Your UK Order with Order Number: " + orderNumber + " is created");
		driver.quit();
		return orderNumber;
	}

}