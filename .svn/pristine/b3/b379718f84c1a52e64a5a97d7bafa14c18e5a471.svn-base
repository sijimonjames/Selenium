package com.acneuro.test.automation.price_plan_tests;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.testng.Reporter;
import org.testng.annotations.Test;

import com.acneuro.test.automation.libraries.ConfigLib;
import com.acneuro.test.automation.libraries.Constant;
import com.acneuro.test.automation.mvno_project_library.MVNOProjectSpecific;
import com.acneuro.test.automation.mvno_project_library.UKProjectSpecific;

/**
 * @author SIJIMON JAMES
 * @Tests: UK Liberty Price Plan tests takes screen shot of each page of Order
 *         entry process, test will verify Liberty Fee, Connection Fee and Total
 *         price
 */

public class TC_01_UKLibertyPricePlanFeeTest extends ConfigLib {

	private static String UKScreenShotPath = ".//ScreenShots/Connection_Fee_Tests/Liberty_PP/UK";

	@Test(priority = 1)
	public void ukAllFeeTests() throws IOException {

		// clear the directory
		FileUtils.deleteDirectory(new File(UKScreenShotPath));

		// Egalitte price plan
		UK_fees_tests_For_Liberty_Price_plan();

	}

	public void UK_fees_tests_For_Liberty_Price_plan() {

		// get the URL of UK website
		UKProjectSpecific.ukUrlSelection();

		// Select the price plan
		MVNOProjectSpecific.orderCreationPageInEnglish();
		UKProjectSpecific.Joi_Liberty_price_plan();

		/*
		 * verify fees on Mobile Subscription Offer page, after Price plan and
		 * sim type is selected
		 */
		System.out.println("Fees in Offer page");
		MVNOProjectSpecific.VariousFeesForPricePlans(Constant.UK_Liberty_FEE, Constant.UK_CONNECTION_FEE,
				Constant.UK_LIBERTY_TOTAL_PRICE);
		System.out.println("Fees are as expected in Offer page");
		MVNOProjectSpecific.takeScreenShot(UKScreenShotPath + "/1_Liberty_Offer_Page.png");
		/*
		 * verify fees on additional product page
		 */
		UKProjectSpecific.Our_Offer_add_to_basket();
		System.out.println("Fees in additional products page");
		MVNOProjectSpecific.VariousFeesForPricePlans(Constant.UK_Liberty_FEE, Constant.UK_CONNECTION_FEE,
				Constant.UK_LIBERTY_TOTAL_PRICE);
		System.out.println("Fees are as expected in additional products page");
		MVNOProjectSpecific.takeScreenShot(UKScreenShotPath + "/2_Liberty_additional_products_page.png");

		/*
		 * verify fees on offer basket page
		 */
		MVNOProjectSpecific.add_to_basket_without_porting();
		System.out.println("Fees in offer basket page");
		MVNOProjectSpecific.VariousFeesForPricePlans(Constant.UK_Liberty_FEE, Constant.UK_CONNECTION_FEE,
				Constant.UK_LIBERTY_TOTAL_PRICE);
		System.out.println("Fees are as expected in offer basket page");
		MVNOProjectSpecific.takeScreenShot(UKScreenShotPath + "/3_Liberty_offer_basket_page.png");

		/*
		 * verify fees on create account page
		 */
		MVNOProjectSpecific.checkOutOrder();
		System.out.println("Fees in create account page");
		MVNOProjectSpecific.VariousFeesForPricePlans(Constant.UK_Liberty_FEE, Constant.UK_CONNECTION_FEE,
				Constant.UK_LIBERTY_TOTAL_PRICE);
		System.out.println("Fees are as expected in create account page");
		MVNOProjectSpecific.takeScreenShot(UKScreenShotPath + "/4_Liberty_create_account_page.png");
		/*
		 * verify fees on Create account-Personal details page
		 */
		UKProjectSpecific.createUkCustomerAccount();
		System.out.println("Fees in Create account-Personal details page");
		MVNOProjectSpecific.VariousFeesForPricePlans(Constant.UK_Liberty_FEE, Constant.UK_CONNECTION_FEE,
				Constant.UK_LIBERTY_TOTAL_PRICE);
		System.out.println("Fees are as expected in Create account-Personal details page");
		MVNOProjectSpecific.takeScreenShot(UKScreenShotPath + "/5_Liberty_account_Personal_details_page.png");

		/*
		 * verify fees on account creation success page
		 */
		MVNOProjectSpecific.Customer_details("Mrs.", "ACNEuro", "MVNO", "Fees Automation", "01121960", "0123467890");

		UKProjectSpecific.contactAndBillingAdress("SW7 5DP", "38", "38 Hyde Park Gate London SW7 5DP GB");

		System.out.println("Fees in account creation success page");
		MVNOProjectSpecific.VariousFeesForPricePlans(Constant.UK_Liberty_FEE, Constant.UK_CONNECTION_FEE,
				Constant.UK_LIBERTY_TOTAL_PRICE);
		System.out.println("Fees are as expected in account creation success page");
		MVNOProjectSpecific.takeScreenShot(UKScreenShotPath + "/6_Liberty_account_creation_success_page.png");

		/*
		 * verify fees on mobile subscription details page
		 */
		UKProjectSpecific.continueFromAccountCreationPage();

		System.out.println("Fees in mobile subscription details page");
		MVNOProjectSpecific.VariousFeesForPricePlans(Constant.UK_Liberty_FEE, Constant.UK_CONNECTION_FEE,
				Constant.UK_LIBERTY_TOTAL_PRICE);
		System.out.println("Fees are as expected in mobile subscription details page");
		MVNOProjectSpecific.takeScreenShot(UKScreenShotPath + "/7_Liberty_mobile_subscription_details_page.png");

		/*
		 * verify fees on Payment details page
		 */
		MVNOProjectSpecific.continueToStep3WithoutPorting();

		System.out.println("Fees in Payment details page");
		MVNOProjectSpecific.VariousFeesForPricePlans(Constant.UK_Liberty_FEE, Constant.UK_CONNECTION_FEE,
				Constant.UK_LIBERTY_TOTAL_PRICE);
		System.out.println("Fees are as expected in Payment details page");
		MVNOProjectSpecific.takeScreenShot(UKScreenShotPath + "/8_Liberty_Payment_details_page.png");

		/*
		 * verify fees on Order summary page
		 */
		UKProjectSpecific.Bank_details(Constant.Bank_Name_UK, Constant.UK_Account_Number, Constant.UK_Sort_code);

		System.out.println("Fees in Order summary page");
		MVNOProjectSpecific.VariousFeesForPricePlans(Constant.UK_Liberty_FEE, Constant.UK_CONNECTION_FEE,
				Constant.UK_LIBERTY_TOTAL_PRICE);
		System.out.println("Fees are as expected in Order summary page");
		MVNOProjectSpecific.takeScreenShot(UKScreenShotPath + "/9_Liberty_Order_summary_page.png");

		// Payment page
		MVNOProjectSpecific.orderSummaryPageForNewCustomer("999999");

		System.out.println("Check total price in Payment page");
		MVNOProjectSpecific.verifyPricePlanAmountInDatacashPage(Constant.UK_LIBERTY_DATACASH_PRICE);
		System.out.println("Total price is as expected in Payment page");
		MVNOProjectSpecific.takeScreenShot(UKScreenShotPath + "/10_Liberty_Datacash_page.png");

		// complete the order
		MVNOProjectSpecific.Payment_Datacash(Constant.Card_Type1, Constant.Type1_CC_number, "2018",
				Constant.Type1_CC_CVV);

		// close the webpage
		driver.quit();

		Reporter.getOutput();
		Reporter.log(String.format("Check the Path for ScreenShots: %s", UKScreenShotPath));

	}

	// @Test(priority = 2)
	// public void cmsContentSetup() {
	//
	// // get the URL of France English website
	// String frenchURL = Generic.urlSelection("UK");
	// driver.get(frenchURL);
	//
	// // Hide the cookie message
	// MVNOProjectSpecific.hideCookieMessage();
	//
	// // Verify the Product Details section
	//
	// MVNOProjectSpecific.selectProductDetails();
	// // check for text "upfront connection fee of £15"
	// UKProjectSpecific.ConnectionFeeFromProductDetails();
	//
	// MVNOProjectSpecific
	// .takeScreenShot(".//ScreenShots/Connection_Fee_Tests/Liberty_PP/UK/11_Liberty_Product_Details.png");
	//
	// }
}
