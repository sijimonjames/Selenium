package com.acneuro.test.automation.france_workflow_tests;

import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.Test;

import com.acneuro.test.automation.libraries.ConfigLib;
import com.acneuro.test.automation.libraries.Constant;
import com.acneuro.test.automation.libraries.Generic;
import com.acneuro.test.automation.libraries.VideoRecording;

import mvno_project_library.FranceProjectSpecific;
import mvno_project_library.MVNOProjectSpecific;

public class TC_1_FranceEnglishCustomerActivation extends ConfigLib {

	String orderId = "";
	String orderNumber = "";

	@Test
	public void CustomerActivation() {

		// get the URL of France English website
		String frenchURL = Generic.urlSelection("FR_English");
		driver.get(frenchURL);

		// Checking the database for status="RESOLVING_TASKS"(sometimes "NEW")
		// change this always to "RESOLVING_TASKS"

		String orderNumber = account_creation();

		/*
		 * Fail the test if Order is in any other status other than resolving
		 * tasks
		 */

		// verify for resolving tasks
		Assert.assertTrue(MVNOProjectSpecific.CheckStatusOfOrder(orderNumber));

		// RESOLVING_TASKS API signal
		orderId = MVNOProjectSpecific.processResolvingTasksSignal(orderNumber);

		// here we check if upfront payment action created
		boolean checkActionUpfrontPayment = MVNOProjectSpecific.checkIfActionExistsForOrder(orderId,
				"ofUpfrontPaymentWait");
		Assert.assertTrue(checkActionUpfrontPayment);

		// here we check if upfront payment is finished successfully
		boolean upfrontPaymentActionIsDone = MVNOProjectSpecific.processUpfrontPayment(orderId);
		Assert.assertTrue(upfrontPaymentActionIsDone);

		// here we check if shipping signal action is created
		boolean checkActionmbShipWaiting = FranceProjectSpecific.checkIfActionExistsForOrder(orderId, "mbShipWaiting");
		Assert.assertTrue(checkActionmbShipWaiting);

		// here we check if upfront payment is finished successfully
		boolean mbShipWaitingIsDone = FranceProjectSpecific.processShipWait(orderId, "mbShipWaiting");
		Assert.assertTrue(mbShipWaitingIsDone);

		// here we check if SIM activation action is created
		boolean checkActionmbSimActivation = FranceProjectSpecific.checkIfActionExistsForOrder(orderId,
				"mbSimActivation");
		Assert.assertTrue(checkActionmbSimActivation);

		// If SIM activation action present activate the SIM in MYJOi
		FranceProjectSpecific.LoginToMyJoiFrance();
		FranceProjectSpecific.ActivateSimAfterLogin();
		Reporter.log("SIM activation is completed using MyJOi", true);

		boolean checkActionmbProvisionWait = FranceProjectSpecific.checkIfActionExistsForOrder(orderId,
				"mbProvisionWait");
		Assert.assertTrue(checkActionmbProvisionWait);

		FranceProjectSpecific.provisioningDuringActivationOfOrders(orderId);

	}

	public String account_creation() {

		String newEmailId = "";
		String customerNumber = "";

		// video recording
		// VideoRecording.startRecording();

		MVNOProjectSpecific.hideCookieMessage();

		// Step 1: verify the home page title
		MVNOProjectSpecific.verifyTitleOfPage("JOi Telecom");
		// FranceProjectSpecific.takeScreenShot("C:/testing/workspace/Screenshots/mvno/homepage_france.png");
		// Step 2: Click on order button
		MVNOProjectSpecific.orderCreationPageInEnglish();
		// step 3:check the radio button 'Joi Liberty' ----PRICE PLAN SELECTION
		FranceProjectSpecific.joiLibertyPricePlan();
		FranceProjectSpecific.combiSimTypeSelectionForLiberty();
		// step 4: Click on 'Add To Basket' on same page,
		// this can be used for any price plan
		FranceProjectSpecific.ourOfferPageAddToBasketButton();
		// step 5: Click on 'Add To Basket' without Number porting
		FranceProjectSpecific.add_to_basket_without_porting();
		// Step 6: click on "check out / Continue for Fr"
		FranceProjectSpecific.checkOutOrder();

		newEmailId = FranceProjectSpecific.FranceCustomerAccountCreation();
		

		FranceProjectSpecific.customerDetails("Mrs.", "ACNEuro", "MVNO", "France Automation", "01011940",
				"0123467890");
		FranceProjectSpecific.uploadCustomerIdCopy();
		FranceProjectSpecific.contactAndBillingAdress("75007", "38", "1");
		try {
			Thread.sleep(Constant.DEFAULT_SHORT_SLEEP_TIME);
		} catch (InterruptedException e1) {
			e1.printStackTrace();
		}

		// Verify the account creation page

		MVNOProjectSpecific.verifyTitleOfPage("JOi Account Created");

		// Get the customer number
		customerNumber = MVNOProjectSpecific.queryLatestCustomerNumber("FR");

		System.out.println("Customer Number created: " + customerNumber);

		// FranceProjectSpecific.updateEmailIInExcelSheet();
		FranceProjectSpecific.continueButtonAfterAccountCreation();

		// Subscription details - Subscription is for same customer
		FranceProjectSpecific.continueToStep3WithoutPorting();

		// France-Bank Account details
		FranceProjectSpecific.franceBankDetailsAndClickToContinue(Constant.FrIbanNumber, Constant.FrSwiftCode);

		FranceProjectSpecific.orderSummaryPageForNewCustomer("999999");

		// temporarily update Email ID
		MVNOProjectSpecific.updateEmailIdInCust_customersTable(Constant.PERSONAL_EMAIL_ADRRESS, customerNumber);

		System.out.println(String.format("Email address is updated to %s", Constant.PERSONAL_EMAIL_ADRRESS));

		FranceProjectSpecific.Payment_Datacash(Constant.Card_Type1, Constant.Type1_CC_number, "2018",
				Constant.Type1_CC_CVV);

		MVNOProjectSpecific.verifyTitleOfPage("Your JOi Order Confirmation");
		MVNOProjectSpecific.takeScreenShot("C:/testing/workspace/Screenshots/mvno/Order_Creation.png");
		String getOrderNumberWithHash = MVNOProjectSpecific.getAndVerifyText("//div/article/section/p[2]/strong");
		orderNumber = getOrderNumberWithHash.substring(1);

		// stop video recording
		// VideoRecording.stopRecording();

		driver.quit();
		Reporter.log("Order is created successfully. France Order number is: " + orderNumber, true);

		// change the email id back to normal
		MVNOProjectSpecific.updateEmailIdInCust_customersTable(newEmailId, customerNumber);
		
		System.out.println("Email Adress should be back to normal as Username");

		return orderNumber;
	}

}