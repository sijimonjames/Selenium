package com.acneuro.test.automation.uk_workflow_tests;

import org.junit.Assert;
import org.testng.annotations.Test;

import com.acneuro.test.automation.libraries.UKConfigLib;
import com.acneuro.test.automation.libraries.UKProjectSpecific;

public class TC_6_UK_SIM_Replacement_Tests extends UKConfigLib {

	@Test(priority = 1)
	public void simReplacementLost() {
		String joiNumber="";
		String orderID="";
		// Step 1.1: latest active CIN product, fail if no active cin product
		// Step 1.2: Customer number for latest cin product
		// Step 1.3: customer login details found from customer number
		// Step 1.4: Login to myjoi with above login details
		joiNumber = UKProjectSpecific.LoginToUKMyJoiWithActiveSubscription();
		System.out.println("Joi Number: " + joiNumber);
		// Step 5: My Subscriptions > find the same active subscription > My
		// Settings
		UKProjectSpecific.ukManageSettingsFromSubscriptions(joiNumber);
		// Step 7: My settings > 'Replace Sim'> Lost Sim > check simType >
		// Submit, verify the submit message
		UKProjectSpecific.selectAndSubmitReplaceSimFromMySettings("LOST");
		// Get the Order id and check the different processes and process ID
		driver.quit();
		orderID = UKProjectSpecific.simReplacementOrderdetails(joiNumber);
		UKProjectSpecific.simReplacementSuspensionOfProvisioningUsertaskFix(orderID);
		// Shipping of New SIM with a different ICC ID
		boolean shipWaitIsProcessed = UKProjectSpecific.processShipWait(orderID, "simReplacementShipWait");
		// Test is failed if shipping is not processed
		Assert.assertTrue(shipWaitIsProcessed);
		// Login and Activation of SIM
		UKProjectSpecific.LoginToUKMyJoiWithMsisdn(joiNumber);
		UKProjectSpecific.activationOfSIMReplacement_Lost();
		boolean provisioningUserTask = UKProjectSpecific.checkIfActionExists(orderID,
				"simReplacementChangeSimProvFailureUserTask");
		Assert.assertTrue(provisioningUserTask);
		UKProjectSpecific.simReplacementActivationByProvisioningUsertaskFix(orderID);
		// Check for action "simReplacementFinish" is "SUCCESS"
		boolean simOrderIsDone = UKProjectSpecific.checkForSimReplacementOrderIsDone(orderID);
		Assert.assertTrue(simOrderIsDone);
		// Verify CIN_PRODUCT with order id, should be Active
		UKProjectSpecific.verifyCinproductyIsActive(orderID);
		System.out.println("Lost Sim Replacement test is Passed");

	}

	// @Test(priority = 2)
	// public void simReplacementStolen() {
	// // Step 1.1: Find latest active CIN product, fail if no active cin
	// // product
	// // Step 1.2: Customer number for latest cin product
	// // Step 1.3: customer login details found from customer number
	// // Step 1.4: Login to myjoi with above login details
	// String joiNumber =
	// UKProjectSpecific.LoginToUKMyJoiWithActiveSubscription();
	// System.out.println("Joi Number: " + joiNumber);
	// // Step 5: My Subscriptions > find the same active subscription > My
	// // Sttings
	// UKProjectSpecific.ukManageSettingsFromSubscriptions(joiNumber);
	// // Step 7: My settings > 'Replace Sim'
	// UKProjectSpecific.selectReplaceSimFromMySettings("STOLEN");
	// driver.quit();
	// // Step 9: Repeat 4 to 6, Replace SIM option should not be available
	// // Fail the test if available
	// // Step 10:
	//
	// }
	//
	// @Test(priority = 3)
	// public void simReplacementOther() {
	//
	// // Step 1.1: Find latest active CIN product, fail if no active cin
	// // product
	// // Step 1.2: Customer number for latest cin product
	// // Step 1.3: customer login details found from customer number
	// // Step 1.4: Login to myjoi with above login details
	// String joiNumber =
	// UKProjectSpecific.LoginToUKMyJoiWithActiveSubscription();
	// System.out.println("Joi Number: " + joiNumber);
	// // Step 5: My Subscriptions > find the same active subscription > My
	// // Sttings
	// UKProjectSpecific.ukManageSettingsFromSubscriptions(joiNumber);
	// // Step 7: My settings > 'Replace Sim'
	// UKProjectSpecific.selectReplaceSimFromMySettings("OTHER");
	//
	// }

}