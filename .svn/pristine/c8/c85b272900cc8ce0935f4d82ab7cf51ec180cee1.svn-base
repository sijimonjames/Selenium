package com.acneuro.test.automation.uk_workflow_tests;

import java.sql.ResultSet;

import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.Test;
import com.acneuro.test.automation.libraries.UKConfigLib;
import com.acneuro.test.automation.libraries.Constant;
import com.acneuro.test.automation.libraries.Generic;
import com.acneuro.test.automation.libraries.OracleJdbcConnection;
import com.acneuro.test.automation.libraries.UKProjectSpecific;
import com.acneuro.test.automation.libraries.QueryUtils;

public class TC_1_UKCustomerActivation extends UKConfigLib {

	String orderId = "";
	String orderNumber = "";
	String taskId = ""; // Need task id to 'resolving_tasks'
	String latestPriId = "";
	
	@Test
	public void CustomerActivation() {

		orderNumber = accountCreationForUKCustomer();

		// if order status is 'NEW' in database change to 'RESOLVING_TASKS'

		try {
			OracleJdbcConnection.crmDatabaseUpdateQuery(QueryUtils.queryUpdateOrderStatus(orderNumber));
			ResultSet resultSet = OracleJdbcConnection.crmDatabaseSelectQuery(QueryUtils.queryOrderStatus(orderNumber));
			while (resultSet.next()) {
				orderId = resultSet.getString("ID");
				System.out.println(orderId);
				System.out.println(resultSet.getString("ORD_NUMBER"));
				System.out.println(resultSet.getString("STATUS"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		try {
			ResultSet resultSet = OracleJdbcConnection.crmDatabaseSelectQuery(QueryUtils.queryTaskId(orderId));
			while (resultSet.next()) {
				taskId = resultSet.getString("ID");
				System.out.println("taskId: " + taskId);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		try {
			ResultSet resultSet = OracleJdbcConnection.crmDatabaseSelectQuery(QueryUtils.querylatestProcessId(orderId));
			while (resultSet.next()) {
				Thread.sleep(500);
				latestPriId = resultSet.getString("max(PRI_ID)");
				System.out.println("Process ID: " + latestPriId);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		// RESOLVING_TASKS API signal
		try {
			UKProjectSpecific.resolvingTasksSignal(latestPriId, taskId);
		} catch (Exception e) {

			e.printStackTrace();
		}

		// here we check if upfront payment action created
		boolean checkActionUpfrontPayment = UKProjectSpecific.checkIfActionExists(orderId, "ofUpfrontPaymentWait");
		Assert.assertTrue(checkActionUpfrontPayment);

		// here we check if upfront payment is finished successfully
		boolean upfrontPaymentActionIsDone = UKProjectSpecific.processUpfrontPayment(orderId);
		Assert.assertTrue(upfrontPaymentActionIsDone);

		// here we check if shipping signal action is created
		boolean checkActionmbShipWaiting = UKProjectSpecific.checkIfActionExists(orderId, "mbShipWaiting");
		Assert.assertTrue(checkActionmbShipWaiting);

		// here we check if upfront payment is finished successfully
		boolean mbShipWaitingIsDone = UKProjectSpecific.processShipWait(orderId, "mbShipWaiting");
		Assert.assertTrue(mbShipWaitingIsDone);

		// here we check if SIM activation action is created
		boolean checkActionmbSimActivation = UKProjectSpecific.checkIfActionExists(orderId, "mbSimActivation");
		Assert.assertTrue(checkActionmbSimActivation);

		// If SIM activation action present activate the SIM in MYJOi
		UKProjectSpecific.LoginToUKMyJoiWithLatestEmailID();
		UKProjectSpecific.ActivateSimAfterLogin();
		Reporter.log("SIM activation is done using MyJOi", true);

		boolean checkActionmbProvisionWait = UKProjectSpecific.checkIfActionExists(orderId, "mbProvisionWait");
		Assert.assertTrue(checkActionmbProvisionWait);

		UKProjectSpecific.provisioningDuringActivationOfOrders(orderId);

	}

	public String accountCreationForUKCustomer() {

		//Select UK URL
		Generic.urlSelection("UK");
		//Hide the cookies message
		UKProjectSpecific.hideCookieMessage();
		// Step 1: verify the home page title
		UKProjectSpecific.verifyTitleOfPage("JOi Telecom");
		// Step 2: Click on order button
		UKProjectSpecific.order_creation_page();
		// step 3:check the radio button 'Joi Liberty' ----PRICE PLAN SELECTION
		try {
			UKProjectSpecific.Joi_Liberty_price_plan();
		} catch (Exception e) {
			e.printStackTrace();
		}
		// step 4: Click on 'Add To Basket' on same page, this can be used for
		// any price plan
		UKProjectSpecific.Our_Offer_add_to_basket();
		// step 5: Click on 'Add To Basket' without Number porting
		try {
			UKProjectSpecific.addToBasketWithoutPorting();
		} catch (Exception e) {
			e.printStackTrace();
		}
		// Step 6: click on "check out"
		UKProjectSpecific.Check_Out_Order();
		UKProjectSpecific.createUkCustomerAccount();
		UKProjectSpecific.customerDetails("Mr.", "ACN", "MVNO", "Automation", "31121966", "03900000000");
		try {
			UKProjectSpecific.contactAndBillingAdress("SW7 5DP", "38", "38 Hyde Park Gate London SW7 5DP GB");
			Thread.sleep(15000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		UKProjectSpecific.verifyTitleOfPage("JOi Account Created");

		try {
			UKProjectSpecific.continueFromAccountCreationPage();
		} catch (Exception e) {
			e.printStackTrace();
		}
		// Subscription details - Subscription is for same customer
		try {
			UKProjectSpecific.continue_step_3();
		} catch (Exception e) {
			e.printStackTrace();
		}
		// UK-Bank Account details
		try {
			UKProjectSpecific.Bank_details(Constant.Bank_Name_UK, Constant.UK_Account_Number, Constant.UK_Sort_code);
		} catch (Exception e) {
			e.printStackTrace();
		}
		try {
			UKProjectSpecific.orderSummaryPageForNewCustomer("999999");
		} catch (Exception e) {
			e.printStackTrace();
		}
		try {
			UKProjectSpecific.Payment_Datacash(Constant.Card_Type1, Constant.Type1_CC_number, "2018",
					Constant.Type1_CC_CVV);
		} catch (Exception e) {
			e.printStackTrace();
		}
		UKProjectSpecific.verifyTitleOfPage("Your JOi Order Confirmation");
		UKProjectSpecific.takeScreenShot("C:/testing/workspace/Screenshots/mvno/Order_Creation.png");
		String getOrderNumber = UKProjectSpecific.getAndVerifyText("//div/article/section/p[2]/strong");
		String orderNumber = getOrderNumber.substring(1);
		Reporter.log("Your UK Order with Order Number: " + orderNumber + " is created");
		driver.quit();
		return orderNumber;
	}

}